# -*- coding: utf-8 -*-
import random
import time

import requests
import os
from dotenv import load_dotenv
from simple_bot import Bot  # базовый класс бота из файла simple_bot

from vk_api.longpoll import (
    VkLongPoll,
    VkEventType,
)  # использование VkLongPoll и VkEventType

load_dotenv()
modern_wisdom = [
    "Все проблемы человечества проистекают из неспособности человека тихо посидеть в комнате наедине с собой. Блез Паскаль",
    "Нехватка уединения Состояние, при котором вы не свободны от влияния чужих идей и практически не тратите время на собственные мысли.",
    "Мы стали жертвами неравной гонки, в которой технологии охотятся за нами с помощью точных ударов по самым уязвимым частям нашего мозга, пока мы наивно верим, что получаем бесплатные дары.",
    "Мы должны относиться к минутам нашей жизни как к конкретной и ценной субстанции — возможно, самой ценной из всех находящихся в нашем распоряжении — и постоянно спрашивать себя, сколько этих минут и часов мы проводим за занятиями, которые тратят наше время впустую.",
    "Давайте будем честны с собой: проверка лайков стала эквивалентом курения.",
    "Ставя под вопрос свои привычки, мы можем прийти к тому же заключению, что и Генри Торо: очень часто общие затраты на неважные вещи, которыми мы забиваем свою жизнь, превосходят небольшие блага, обещаемые индивидуальными приложениями или гаджетами.",
    "Каждый привлекательный заголовок или интригующая ссылка, на которую вы нажимаете, становится «метафорическим раундом» на игровом автомате.",
    "Нам неприятно чувство потери контроля — чувство, которое так или иначе появляется каждый день, например когда мы оставляем телефон на кухне, купая ребенка в ванне, или теряем возможность насладиться приятным мгновением, не пытаясь задокументировать его для виртуальных зрителей.",
    "Избегая одиночества, вы упускаете его положительные моменты — возможность подумать над сложными проблемами, отрегулировать эмоции, набраться решительности и улучшить отношения.",
    "Выделяйте время для того, что действительно важно, и отказывайтесь от того, что отвлекает вас от главного. Грег МакКеон",
    "Настоящая роскошь XXI века - это время и внимание. Марк Фримен",
    "Мы стали зависимыми от технологий не из-за их пользы, а из-за их привлекательности. Тристан Харрис",
    "Иногда, чтобы найти себя, нужно отключиться от всего остального. Лео Бабаута",
    "С каждым новым устройством мы приближаемся к моменту, когда технологии начнут управлять нами, а не мы ими. — Джон Тири",
]


def random_quote():
    return f"{modern_wisdom[random.randint(0, len(modern_wisdom) - 1)]}"


class LongPollBot(Bot):
    """
    Бот, прослушивающий в бесконечном цикле входящие сообщения и способный отвечать на некоторые из них
    Бот отвечает на строго заданные сообщения
    """

    # длительное подключение
    long_poll = None

    user_last_response_time = {}

    def __init__(self):
        """
        Иинициализация бота
        """
        super().__init__()
        self.long_poll = VkLongPoll(self.vk_session)

    def run_long_poll(self):
        """
        Запуск бота
        """

        while True:
            try:
                for event in self.long_poll.listen():

                    # если пришло новое сообщение - происходит проверка текста сообщения
                    if (
                        event.type == VkEventType.MESSAGE_NEW
                        and event.to_me
                        and event.text
                    ):
                        user_id = event.user_id
                        current_time = time.time()
                        cooldown_period = 60 * 5  # 5 minutes cooldown period

                        if user_id in self.user_last_response_time:
                            last_response_time = self.user_last_response_time[user_id]
                            if current_time - last_response_time < cooldown_period:
                                self.send_message(
                                    receiver_user_id=user_id,
                                    message_text="ну правда. я смогу ответить только новой цитатой. и то через пять минут",
                                )
                                continue
                        self.user_last_response_time[user_id] = current_time

                        # ответ отправляется в личные сообщения пользователя (если сообщение из личного чата)
                        if event.from_user:

                            self.send_message(
                                receiver_user_id=event.user_id,
                                message_text=f"привет. теперь я крайне редко бываю ВК\nесли хочешь со мной связаться, напиши в телеграм: https://t.me/yowawowa\n---\n{random_quote()}",
                            )

                        # ответ отпрвляется в беседу (если сообщение было получено в общем чате)
                        # elif event.from_chat:
                        #    self.send_message(receiver_user_id=event.chat_id, message_text="Всем привет")

            except Exception as error:
                requests.post(
                    f"https://ntfy.sh/{os.getenv("NTFY_TOPIC")}",
                    data="vkdm crashed".encode(encoding="utf-8"),
                )
